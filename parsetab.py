
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionCHARACTER DISJUNCTION LPAREN MULTIPLIER RPARENexpression : regexp expressionexpression : regexpregexp : CHARACTERexpression : expression MULTIPLIERexpression : expression DISJUNCTION expressionexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'RPAREN':([1,3,5,6,8,9,10,],[-3,-2,9,-1,-4,-6,-5,]),'CHARACTER':([0,1,2,3,7,],[1,-3,1,1,1,]),'LPAREN':([0,1,2,3,7,],[2,-3,2,2,2,]),'MULTIPLIER':([1,3,4,5,6,8,9,10,],[-3,-2,8,8,8,-4,-6,8,]),'DISJUNCTION':([1,3,4,5,6,8,9,10,],[-3,-2,7,7,7,-4,-6,7,]),'$end':([1,3,4,6,8,9,10,],[-3,-2,0,-1,-4,-6,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'regexp':([0,2,3,7,],[3,3,3,3,]),'expression':([0,2,3,7,],[4,5,6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> regexp expression','expression',2,'p_exp','re_parser.py',16),
  ('expression -> regexp','expression',1,'p_exp_last','re_parser.py',20),
  ('regexp -> CHARACTER','regexp',1,'p_regexp_ch','re_parser.py',24),
  ('expression -> expression MULTIPLIER','expression',2,'p_regexp_multiplier','re_parser.py',28),
  ('expression -> expression DISJUNCTION expression','expression',3,'p_regexp_disjunction','re_parser.py',32),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_regexp_group','re_parser.py',36),
]
